{
  "name": "persona-creative",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1008,
        288
      ],
      "id": "f7889a1f-8cb4-4f6e-ba03-fa90d870c365",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "VBxuF0b2a8jeAnz4",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "12345"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1120,
        368
      ],
      "id": "856e2b5d-74ab-4f78-9a3c-d83f6e7faa43",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "jsonSchemaExample": "[\n  {\n  \"personaName\": \"string\",\n  \"demographics\": {\n    \"age\": \"number or range\",\n    \"gender\": \"string\",\n    \"location\": \"string\",\n    \"education\": \"string\",\n    \"occupation\": \"string\",\n    \"incomeLevel\": \"string\",\n    \"familyStatus\": \"string\"\n  },\n  \"psychographics\": {\n    \"lifestyle\": \"string\",\n    \"values\": [\"string\"],\n    \"personalityTraits\": [\"string\"],\n    \"interests\": [\"string\"]\n  },\n  \"goalsAndMotivations\": {\n    \"primaryGoal\": \"string\",\n    \"secondaryGoals\": [\"string\"],\n    \"motivators\": [\"string\"]\n  },\n  \"painPoints\": [\"string\"],\n  \"purchaseBehavior\": {\n    \"buyingTriggers\": [\"string\"],\n    \"objections\": [\"string\"],\n    \"decisionMakingStyle\": \"string\"\n  },\n  \"adPreferences\": {\n    \"preferredTone\": \"string\",\n    \"visualStyle\": \"string\",\n    \"ctaStyle\": \"string\"\n  }\n}\n]"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        160,
        384
      ],
      "id": "27d9bf59-cc9b-4fb2-9620-f0f667246af2",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        32,
        288
      ],
      "id": "ef7b6ede-8826-4673-af9f-dacebd42a0ee",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "VBxuF0b2a8jeAnz4",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"meta\": {\n    \"version\": \"\",\n    \"engine\": \"\",\n    \"language\": \"\",\n    \"length_hint\": \"\"\n  },\n\n  \"use_case\": \"\", \n  \"priority_order\": [\"\"],\n\n  \"foundation\": {\n    \"subject\": \"\",      \n    \"action\": \"\",       \n    \"style\": \"\",        \n    \"context\": \"\"       \n  },\n\n  \"visual_layer\": {\n    \"lighting\": \"\",           \n    \"color_palette\": \"\",      \n    \"composition\": \"\",        \n    \"camera_angle\": \"\",       \n    \"background_elements\": \"\" \n  },\n\n  \"technical_layer\": {\n    \"camera\": {\n      \"focal_length_mm\": \"\",     \n      \"aperture_f\": \"\",          \n      \"shutter_speed_s\": \"\",     \n      \"iso\": \"\",                 \n      \"lens_type\": \"\"            \n    },\n    \"quality_markers\": [\"\"]\n  },\n\n  \"atmospheric_layer\": {\n    \"mood\": \"\",           \n    \"narrative\": \"\"       \n  },\n\n  \"text_integration\": {\n    \"enabled\": false,\n    \"quoted_text\": \"\",       \n    \"placement\": \"\",         \n    \"typography\": \"\",        \n    \"relation_to_scene\": \"\"  \n  },\n\n  \"constraints\": {\n    \"positive_rewrites\": [\"\"],\n    \"avoid_terms\": [\"\"],            \n    \"style_strength\": \"\",         \n    \"aspect_ratio\": \"\",        \n    \"image_size\": \"\",    \n    \"seed\": \"\",                   \n    \"guidance\": \"\"                \n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1392,
        288
      ],
      "id": "1e3807c1-443f-4ba1-9545-64657831313b",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -480,
        -16
      ],
      "id": "ca6c93fc-2bc4-4b5e-aaff-a03bb99bf4f2",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "brief",
          "mode": "list",
          "cachedResultName": "brief"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "id",
              "value": "={{ $json.payload.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -240,
        256
      ],
      "id": "df8bea26-0b35-4642-b519-a373e94b1866",
      "name": "Select rows from a table",
      "credentials": {
        "postgres": {
          "id": "PBDnoOrLMM2nFE72",
          "name": "n8n_hackathon"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.brief_json }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=**System Role / Instruction:**\nYou are a seasoned User Acquisition Manager with 10+ years of experience in performance marketing. Your job is to generate a precise, actionable customer persona that will serve as input for direct response creative development (banners, videos, copy).\n\n**Your Output Format:**\nAlways output as a valid JSON object following this schema:\n\n```json\n{\n  \"personaName\": \"string\",\n  \"demographics\": {\n    \"age\": \"number or range\",\n    \"gender\": \"string\",\n    \"location\": \"string\",\n    \"education\": \"string\",\n    \"occupation\": \"string\",\n    \"incomeLevel\": \"string\",\n    \"familyStatus\": \"string\"\n  },\n  \"psychographics\": {\n    \"lifestyle\": \"string\",\n    \"values\": [\"string\"],\n    \"personalityTraits\": [\"string\"],\n    \"interests\": [\"string\"]\n  },\n  \"goalsAndMotivations\": {\n    \"primaryGoal\": \"string\",\n    \"secondaryGoals\": [\"string\"],\n    \"motivators\": [\"string\"]\n  },\n  \"painPoints\": [\"string\"],\n  \"purchaseBehavior\": {\n    \"buyingTriggers\": [\"string\"],\n    \"objections\": [\"string\"],\n    \"decisionMakingStyle\": \"string\"\n  },\n  \"adPreferences\": {\n    \"preferredTone\": \"string\",\n    \"visualStyle\": \"string\",\n    \"ctaStyle\": \"string\"\n  }\n}\n```\n\n**Your Task:**\n\n1. Generate **4 distinct personas** that best represent the potential target audience for the given product or service.\n2. Each persona must be realistic, psychologically rich, and directly useful for creative ideation.\n3. Make sure **pain points, motivators, and objections** are detailed enough to inspire hooks, CTAs, and value propositions.\n4. Keep language clear, businesslike, and concise — this will be used as a raw input for creative strategy.\n\n**Input (provided by user):**\n\n* Product/service description\n* Key value proposition\n* Target market (if specified)\n\n**Output:**\n\n* A JSON object (or array if multiple personas) with all required fields populated."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        32,
        32
      ],
      "id": "fb316396-e406-43f5-8129-9a044d8ec436",
      "name": "Persona"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"CTA\": \"\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        848,
        352
      ],
      "id": "ea194bb2-97fa-4ea1-8613-4e6cd881122c",
      "name": "Structured Output Parser2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        656,
        240
      ],
      "id": "d91c5379-9abf-4310-b909-b7bafb43e7c8",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "VBxuF0b2a8jeAnz4",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "12345"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        784,
        240
      ],
      "id": "5bbfe479-4f6f-402c-b6a6-eda83a062662",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "tableName": {
          "__rl": true,
          "value": "brief",
          "mode": "list",
          "cachedResultName": "brief"
        },
        "additionalFields": {},
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTrigger",
      "typeVersion": 1,
      "position": [
        -496,
        256
      ],
      "id": "162c11a3-0b74-4262-93f4-a1b1f74080d2",
      "name": "Postgres Trigger",
      "credentials": {
        "postgres": {
          "id": "PBDnoOrLMM2nFE72",
          "name": "n8n_hackathon"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a performance marketing strategist.  \nYour task is to generate an effective, actionable Call to Action (CTA) for a direct response ad banner, based on the provided persona.  \n\nInstructions:  \n- Use the persona’s demographics, psychographics, goals, pain points, motivators, and ad preferences to craft the CTA.  \n- The CTA must:  \n  • Be short (3–7 words).  \n  • Start with a strong action verb.  \n  • Highlight the payoff or benefit (not just the feature).  \n  • Reduce friction or risk (easy, fast, reliable).  \n  • Match the persona’s preferred tone and style.  \n- If objections are listed, counter them implicitly by making the CTA feel safe, affordable, or trustworthy.  \n- Output ONLY the CTA text, no explanations.  \n\nPersona:  \n{{ JSON.stringify($json.output[3]) }}",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        800,
        32
      ],
      "id": "f8c4dfc3-06cb-4993-aed1-70695e57e331",
      "name": "CTA",
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# Campaign Brief\n## Key Product In the Image: {{ $('Select rows from a table').item.json.brief_json.parseJson().product_name }}: {{ $('Select rows from a table').item.json.brief_json.parseJson().product_description }}\n## Target action: {{ $('Select rows from a table').item.json.brief_json.parseJson().target_action }}\n\n\n## Customer Persona:\n{{ JSON.stringify($('Persona').item.json.output[$('loop').item.json.step]) }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are FLUX Creative Generator.  \nBased on the given input persona (their traits, goals, emotions, and context), generate a complete JSON that pre-fills the following schema.  \n\nInstructions:  \n- The product must be clearly visible and in focus as the main subject of the image. \n- Always respect the structure and field names exactly as provided.  \n- Fill in fields with detailed but concise text grounded in the persona (no placeholders like \"TBD\").  \n- Use creative, audience-matching language that aligns with the persona’s worldview and preferences.  \n- Apply psychological insights (motivations, fears, desires) from the persona to inform “foundation,” “atmospheric_layer,” and “narrative.”  \n \n- For visual/technical layers, infer the most likely cinematic or stylistic framing that suits the persona’s context.  \n- Avoid generic or vague descriptions. Be specific, vivid, and audience-relevant.  \n- If “text_integration.enabled = true,” quote the text explicitly inside the scene. Otherwise keep it false.  \n- Respect the constraints, positive rewrites, and checklist for quality.  \n\nOutput: ONLY valid JSON in this exact template →  \n\n{\n  \"meta\": {\n    \"version\": \"1.0\",\n    \"engine\": \"FLUX\",\n    \"language\": \"en\",\n    \"length_hint\": \"medium\" \n  },\n\n  \"use_case\": \"generic\", \n  \"priority_order\": [\n    \"subject\",\n    \"action\",\n    \"style\",\n    \"context\",\n    \"visual_layer\",\n    \"technical_layer\",\n    \"atmospheric_layer\",\n    \"text_integration\"\n  ],\n\n  \"foundation\": {\n    \"subject\": \"\",      \n    \"action\": \"\",       \n    \"style\": \"\",        \n    \"context\": \"\"       \n  },\n\n  \"visual_layer\": {\n    \"lighting\": \"\",           \n    \"color_palette\": \"\",      \n    \"composition\": \"\",        \n    \"camera_angle\": \"\",       \n    \"background_elements\": \"\" \n  },\n\n  \"technical_layer\": {\n    \"camera\": {\n      \"focal_length_mm\": \"\",     \n      \"aperture_f\": \"\",          \n      \"shutter_speed_s\": \"\",     \n      \"iso\": \"\",                 \n      \"lens_type\": \"\"            \n    },\n    \"quality_markers\": [\n      \"high detail\",\n      \"cinematic\"\n    ]\n  },\n\n  \"atmospheric_layer\": {\n    \"mood\": \"\",           \n    \"narrative\": \"\"       \n  },\n\n  \"text_integration\": {\n    \"enabled\": false,\n    \"quoted_text\": \"\",       \n    \"placement\": \"\",         \n    \"typography\": \"\",        \n    \"relation_to_scene\": \"\"  \n  },\n\n  \"constraints\": {\n    \"positive_rewrites\": [\n      \"peaceful solitude\",\n      \"clear, unobstructed eyes\"\n    ],\n    \"avoid_terms\": [],            \n    \"style_strength\": \"\",         \n    \"aspect_ratio\": \"1:1\",        \n    \"image_size\": \"1024x1024\",    \n    \"seed\": \"\",                   \n    \"guidance\": \"\"                \n  }\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1168,
        32
      ],
      "id": "bb39899e-db6b-43e1-8be5-40dae53574fe",
      "name": "IMAGE"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"iteractions\": 4,\n  \"step\": 0\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        384,
        32
      ],
      "id": "c1a516a5-3d15-49ec-8315-d7f6c6ec0de5",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "brief",
          "mode": "list",
          "cachedResultName": "brief"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "id",
              "value": "e970a669-0e63-4fc3-8aff-2e2288cee846"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -240,
        -16
      ],
      "id": "b62c293c-426b-4b95-882b-37bacc0c8593",
      "name": "Select rows from a table1",
      "credentials": {
        "postgres": {
          "id": "PBDnoOrLMM2nFE72",
          "name": "n8n_hackathon"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $('loop').all();\n\nfor (const item of items) {\n  item.json.step = (Number(item.json.step) || 0) + 1;\n}\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1760,
        32
      ],
      "id": "4644a5b9-8095-40aa-8bad-078637382f7e",
      "name": "Code1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "df08ad91-d0ed-45b5-9c82-969fd5132a75",
              "leftValue": "={{ $json.step }}",
              "rightValue": "={{ $json.iteractions }}",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        560,
        32
      ],
      "id": "e5ef619f-5aee-4a68-9b3a-3f73610b1ade",
      "name": "loop"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        816,
        -176
      ],
      "id": "112cbeaa-8b5e-4025-bb0a-8de43830a3d4",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "jGY9YFTvFt5Hu1Z4",
          "mode": "list",
          "cachedResultName": "hackaton simple"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1520,
        32
      ],
      "id": "57136ce6-8b0e-4a83-8e9b-26512638cb7c",
      "name": "Execute Workflow"
    }
  ],
  "pinData": {
    "Postgres Trigger": [
      {
        "json": {
          "length": 576,
          "processId": 987,
          "channel": "n8n_channel_162c11a3_0b74_4262_93f4_a1b1f74080d2",
          "payload": {
            "id": "e970a669-0e63-4fc3-8aff-2e2288cee846",
            "created_at": "2025-09-06",
            "brief_json": "{ \"product_name\": \"Ray-Ban Sunglasses\", \"product_description\": \"A premium sunglasses line from Ray-Ban offering timeless eyewear with UV protection, designed for fashion-conscious consumers in global markets.\", \"target_audience\": \"Berlin students, urban, premium lifestyle brand enthusiasts, eyewear fans.\", \"target_geo\": \"Berlin\", \"campaign_goal\": \"Sales conversion\", \"target_action\": \"Visit brand store\" }"
          },
          "name": "notification"
        }
      }
    ],
    "Persona": [
      {
        "json": {
          "output": [
            {
              "personaName": "Anna Müller — Fashion-Forward Student",
              "demographics": {
                "age": "20-24",
                "gender": "Female",
                "location": "Berlin (Mitte/Neukölln)",
                "education": "Undergraduate (Fashion/Communications)",
                "occupation": "Full-time student, part-time barista",
                "incomeLevel": "Low–medium (student budget)",
                "familyStatus": "Single, lives with roommates"
              },
              "psychographics": {
                "lifestyle": "Busy university schedule, café study sessions, nights out, follows trends and local fashion events. Prioritizes appearance and Instagram-ready outfits.",
                "values": [
                  "Style & self-expression",
                  "Authenticity",
                  "Quality",
                  "Social acceptance"
                ],
                "personalityTraits": [
                  "Social",
                  "Image-conscious",
                  "Trend-aware",
                  "Decisive under social pressure"
                ],
                "interests": [
                  "Street fashion",
                  "Vintage/thrift shopping",
                  "Instagram & TikTok fashion creators",
                  "Local pop-ups and parties"
                ]
              },
              "goalsAndMotivations": {
                "primaryGoal": "Own a pair of sunglasses that elevate daily outfits and get noticed on social channels.",
                "secondaryGoals": [
                  "Find a durable, versatile frame that works for day and night",
                  "Buy something perceived as premium without feeling wasteful",
                  "Collect a signature look piece"
                ],
                "motivators": [
                  "Brand heritage and recognizability (Ray‑Ban cachet)",
                  "Visual proof (UGC and influencer use)",
                  "Limited editions/collabs",
                  "Student discounts or payment options"
                ]
              },
              "painPoints": [
                "Budget constraints — hesitates at full price",
                "Cheap sunglasses break or look low-quality in photos",
                "Hard to judge fit/shape online — fears poor fit",
                "Worries about buying a style that feels outdated quickly"
              ],
              "purchaseBehavior": {
                "buyingTriggers": [
                  "Influencer post showing real people in Berlin",
                  "Limited-time student discount or bundle",
                  "In-store try-on / mirror selfies",
                  "Clear product shots showing fit and angles"
                ],
                "objections": [
                  "Price feels high for a student budget",
                  "Fear that frames are too ‘generic’ or not unique",
                  "Concern about returns or awkward in-store experiences"
                ],
                "decisionMakingStyle": "Socially influenced and fast — browses Instagram, narrows to 2–3 options, visits store to try on and buy if it looks right"
              },
              "adPreferences": {
                "preferredTone": "Aspirational but relatable — ‘see yourself’ messaging",
                "visualStyle": "Warm, film-like street photography in Berlin cafés and canals; close-up selfies and UGC",
                "ctaStyle": "Direct social CTAs: “Try in-store”, “See how it looks on you”, “Student discount — book now”"
              }
            },
            {
              "personaName": "Luca Becker — Design & Sustainability Student",
              "demographics": {
                "age": "22-27",
                "gender": "Male",
                "location": "Berlin (Kreuzberg/Friedrichshain)",
                "education": "Design school / BA in Product or Industrial Design",
                "occupation": "Part-time freelance designer, student",
                "incomeLevel": "Low–medium (prioritizes spending on quality/design)",
                "familyStatus": "Single, often shares apartment"
              },
              "psychographics": {
                "lifestyle": "Intentional consumer, visits galleries and concept stores, values craftsmanship and ethically-made products.",
                "values": [
                  "Sustainability",
                  "Transparency",
                  "Craftsmanship",
                  "Longevity"
                ],
                "personalityTraits": [
                  "Analytical",
                  "Selective",
                  "Values-driven",
                  "Detail-oriented"
                ],
                "interests": [
                  "Product design",
                  "Architecture",
                  "Sustainable brands",
                  "Vintage eyewear and restoration"
                ]
              },
              "goalsAndMotivations": {
                "primaryGoal": "Buy sunglasses that are sustainably produced, well-designed and built to last.",
                "secondaryGoals": [
                  "Support brands with transparent sourcing",
                  "Have eyewear that reflects personal aesthetic — minimalist but iconic",
                  "Access repair/aftercare services"
                ],
                "motivators": [
                  "Material transparency and repairability",
                  "Third-party sustainability certifications or evidence",
                  "Design pedigree and timelessness"
                ]
              },
              "painPoints": [
                "Skeptical of greenwashing — needs proof",
                "Lack of visible repair and aftercare options",
                "Typical fashion marketing feels superficial",
                "Worries that style sacrifice may be required for sustainability"
              ],
              "purchaseBehavior": {
                "buyingTriggers": [
                  "Clear information on materials and supply chain",
                  "Promises of repair/replace programs and warranties",
                  "In-store product demos showing material quality",
                  "Design-focused storytelling and close-up shots"
                ],
                "objections": [
                  "Unclear sustainability claims",
                  "Price unless justified by durability/repairability",
                  "Limited technical detail about lenses and materials online"
                ],
                "decisionMakingStyle": "Considered and research-driven — reads specs, reviews, and sustainability reports; prefers in-store inspection before purchase"
              },
              "adPreferences": {
                "preferredTone": "Informative, honest, and design-focused",
                "visualStyle": "Minimalist product photography, close-ups of materials, neutral palettes, studio + Berlin architecture backdrops",
                "ctaStyle": "Educational CTAs: “Learn about materials”, “Book a design-fit appointment”, “See repair options in-store”"
              }
            },
            {
              "personaName": "Maya Schmidt — Social Micro-Influencer & Nightlife Enthusiast",
              "demographics": {
                "age": "21-26",
                "gender": "Female",
                "location": "Berlin (Prenzlauer Berg/Neukölln)",
                "education": "University student / short vocational trainings",
                "occupation": "Part-time event promoter / content creator",
                "incomeLevel": "Low–medium plus occasional brand gigs",
                "familyStatus": "Single, active social life"
              },
              "psychographics": {
                "lifestyle": "Fast-paced social calendar, frequent nightlife and events, curates looks for photos and reels.",
                "values": [
                  "Visibility",
                  "Trendsetting",
                  "Exclusivity",
                  "Self-expression"
                ],
                "personalityTraits": [
                  "Confident",
                  "Outgoing",
                  "Impulsive",
                  "Visually driven"
                ],
                "interests": [
                  "Nightlife and events",
                  "Fashion collaborations",
                  "Content creation and photography",
                  "Pop culture and music scenes"
                ]
              },
              "goalsAndMotivations": {
                "primaryGoal": "Own distinctive sunglasses that photograph well and boost social credibility.",
                "secondaryGoals": [
                  "Be among the first to wear new drops/collabs",
                  "Drive engagement and partnerships from standout looks",
                  "Easily style frames across outfits and events"
                ],
                "motivators": [
                  "Exclusive drops or influencer collabs",
                  "Social proof: photos of peers and influencers wearing them",
                  "Fast visual impact for content creation (frames that photograph well)"
                ]
              },
              "painPoints": [
                "Sunglasses that don’t photograph well under club lighting",
                "Stockouts for popular styles/collabs",
                "Need for quick, camera-ready looks with minimal styling time",
                "Balancing cost vs content ROI"
              ],
              "purchaseBehavior": {
                "buyingTriggers": [
                  "Influencer collaboration or tagged posts",
                  "Flash sale or limited drop announced on social",
                  "In-store try-on with good lighting for photos/AR filters showing how they look",
                  "Bonus like freebies for creators/affiliate offers"
                ],
                "objections": [
                  "High price unless enabled as content investment",
                  "Risk that frames won’t deliver on-camera",
                  "No quick access to limited editions locally"
                ],
                "decisionMakingStyle": "Impulsive and socially driven — reacts quickly to trends and drops, but verifies via peer images and store try-on for content-ready assurance"
              },
              "adPreferences": {
                "preferredTone": "Bold, energetic, aspirational-fun",
                "visualStyle": "High-contrast, nightlife and party shots, neon accents, UGC and influencer overlays",
                "ctaStyle": "Social CTAs: “Try & tag us”, “Limited drop — visit store”, “Get exclusive collab”"
              }
            },
            {
              "personaName": "Jonas Fischer — Practical Urban Commuter",
              "demographics": {
                "age": "24-29",
                "gender": "Male",
                "location": "Berlin (Charlottenburg/Neukölln)",
                "education": "University degree (STEM/Business)",
                "occupation": "Junior product manager / startup employee",
                "incomeLevel": "Medium (entry-level professional)",
                "familyStatus": "Single or in a relationship, lives alone or with partner"
              },
              "psychographics": {
                "lifestyle": "Daily bike commutes, coffee stops, weekend trips. Values efficiency, multifunctional products that look professional.",
                "values": [
                  "Functionality",
                  "Reliability",
                  "Value for money",
                  "Convenience"
                ],
                "personalityTraits": [
                  "Pragmatic",
                  "Time-conscious",
                  "Safety-aware",
                  "Brand-loyal when proven"
                ],
                "interests": [
                  "Cycling and urban mobility",
                  "Tech and gadgets",
                  "Minimalist fashion",
                  "Outdoor weekend activities"
                ]
              },
              "goalsAndMotivations": {
                "primaryGoal": "Buy sunglasses that protect eyes during commutes and look good in professional and casual settings.",
                "secondaryGoals": [
                  "Find durable lenses with anti-glare/polarization",
                  "Buy from a trusted brand with warranty and easy returns",
                  "Shop quickly near work/home"
                ],
                "motivators": [
                  "Performance benefits that simplify daily life",
                  "Convenience (store nearby, quick purchase)"
                ]
              },
              "painPoints": [
                "Glare and eye strain when cycling or commuting",
                "Sunglasses that slide down or don’t fit with helmets/headphones",
                "Limited shopping time due to work schedule",
                "Uncertainty if premium price delivers practical benefits"
              ],
              "purchaseBehavior": {
                "buyingTriggers": [
                  "Clear feature callouts (polarized/UV) and real-world use cases",
                  "In-store availability for immediate purchase",
                  "Employee/student discounts or bundled lens upgrades",
                  "Positive technical reviews and comparison charts"
                ],
                "objections": [
                  "Perceived price too high without clear performance advantages",
                  "Fear of poor fit with commuting gear",
                  "Worries about fragility during active use"
                ],
                "decisionMakingStyle": "Practical and fast — compares specs and reviews, then visits store to test fit before buying if it meets functional requirements"
              },
              "adPreferences": {
                "preferredTone": "Straightforward, benefit-driven",
                "visualStyle": "Clean, contextual images of commuting in Berlin (bikes, trams), product close-ups with spec overlays",
                "ctaStyle": "Direct utility CTAs: “Find a store near you”, “See specs & try in-store”, “Buy with warranty”"
              }
            }
          ]
        }
      }
    ]
  },
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "IMAGE",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "IMAGE",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Persona",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Persona",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "IMAGE",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Select rows from a table1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select rows from a table": {
      "main": [
        [
          {
            "node": "Persona",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Persona": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "CTA",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "CTA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "CTA",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Trigger": {
      "main": [
        [
          {
            "node": "Select rows from a table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CTA": {
      "main": [
        [
          {
            "node": "IMAGE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select rows from a table1": {
      "main": [
        [
          {
            "node": "Persona",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IMAGE": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "loop": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "CTA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b436dc25-c0f3-468b-ae98-f8722920b60b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5a15598c4f70350a1350177d0fd97851d36eed95d8f2203733d7cde20d36947b"
  },
  "id": "od5kIr26FFS4BmgG",
  "tags": []
}